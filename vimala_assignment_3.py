# -*- coding: utf-8 -*-
"""kaviya assignment 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oE0JHxXroI-uWRLRw8tbeVmogZvsaO1Y

# **Importing Packages**
"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Convolution2D,MaxPooling2D,Flatten,Dense
from tensorflow.keras.preprocessing.image import ImageDataGenerator as idm
import numpy as np
import warnings
#Supressing warnings
warnings.filterwarnings('ignore')

"""**2.Image Augmentation**"""

# Creating augmentation on training variable
train_flowers=idm(rescale=1./255,zoom_range=0.2,horizontal_flip=True)

# Passing training data to train variable
Xtrain = train_flowers.flow_from_directory('/content/drive/MyDrive/flowers',target_size=(76,76),class_mode='categorical',batch_size=100)

# Creating augmentation on testing variable
test_flowers=idm(rescale=1./255)

# Passing testing data to test variable
Xtest = test_flowers.flow_from_directory('/content/drive/MyDrive/flowers',target_size=(76,76),class_mode='categorical',batch_size=100)

"""## **3.Create Model**"""

Flower_model = Sequential()
Flower_model.add(Convolution2D(32,(3,3),activation='relu',input_shape=(76,76,3)))
Flower_model.add(MaxPooling2D(pool_size=(2,2)))
Flower_model.add(Flatten())
Flower_model.add(Dense(300,activation='relu'))
Flower_model.add(Dense(150,activation='relu'))
Flower_model.add(Dense(5,activation='softmax'))

"""# 4. Compile the Model"""

Flower_model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

"""# 5. Fit the Model"""

Flower_model.fit_generator(Xtrain,steps_per_epoch= len (Xtrain),epochs= 10,validation_data=Xtest,validation_steps= len (Xtest))

"""# 7. Save the model"""

Flower_model.save('Flower.h5')

"""# **8. Test the model**"""

import cv2

from numpy.lib.type_check import imag
test_img=image.load_img('/content/drive/MyDrive/flowers/sunflower/1008566138_6927679c8a.jpg',target_size=(76,76))
test_img

x=image.img_to_array(test_img)
x=np.expand_dims(x,axis=0)
predicted=np.argmax(Flower_model.predict(x))
Prediction_category=['daisy','dandelion','rose','sunflower','tulip']
Prediction_category[predicted]

test_img1=image.load_img('/content/drive/MyDrive/flowers/tulip/100930342_92e8746431_n.jpg',target_size=(76,76))
test_img1

x=image.img_to_array(test_img1)
x=np.expand_dims(x,axis=0)
predicted=np.argmax(Flower_model.predict(x))
Prediction_category[predicted]

test_img2=image.load_img('/content/drive/MyDrive/flowers/rose/10090824183_d02c613f10_m.jpg',target_size=(76,76))
test_img2

x=image.img_to_array(test_img2)
x=np.expand_dims(x,axis=0)
predicted=np.argmax(Flower_model.predict(x))
Prediction_category[predicted]

